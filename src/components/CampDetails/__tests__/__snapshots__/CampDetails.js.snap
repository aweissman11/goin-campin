// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CampDetails should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CampDetails
    forecast={
      Array [
        Object {
          "date": "asaskdjfhlakjhdflkdf",
          "descrip": "asldkf",
          "icon": "asldfkj;a",
          "summary": "asldkfj",
        },
        Object {
          "date": "asasdfasdfdf",
          "descrip": "asldljkahsdfljhalsdkfjhkf",
          "icon": "asldfkj;a",
          "summary": "asldkfj",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <section
          className="top-bar"
        >
          <div
            className="logo-container"
          >
            <Link
              replace={false}
              to="/"
            >
              <ReactComponent
                className="logo"
              />
            </Link>
          </div>
          <Connect(LocationSearchInput) />
        </section>,
        <div>
          <h2
            className="looking-up"
          >
            Looking up your campground...
          </h2>
          <Loading />
        </div>,
      ],
      "className": "camp-details",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="logo-container"
            >
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </div>,
            <Connect(LocationSearchInput) />,
          ],
          "className": "top-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>,
              "className": "logo-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ReactComponent
                  className="logo"
                />,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "logo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="looking-up"
            >
              Looking up your campground...
            </h2>,
            <Loading />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Looking up your campground...",
              "className": "looking-up",
            },
            "ref": null,
            "rendered": "Looking up your campground...",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <section
            className="top-bar"
          >
            <div
              className="logo-container"
            >
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </div>
            <Connect(LocationSearchInput) />
          </section>,
          <div>
            <h2
              className="looking-up"
            >
              Looking up your campground...
            </h2>
            <Loading />
          </div>,
        ],
        "className": "camp-details",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>
              </div>,
              <Connect(LocationSearchInput) />,
            ],
            "className": "top-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>,
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <ReactComponent
                    className="logo"
                  />,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "logo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="looking-up"
              >
                Looking up your campground...
              </h2>,
              <Loading />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Looking up your campground...",
                "className": "looking-up",
              },
              "ref": null,
              "rendered": "Looking up your campground...",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CampDetails should match the snapshot with a name 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CampDetails
    forecast={
      Array [
        Object {
          "date": "asaskdjfhlakjhdflkdf",
          "descrip": "asldkf",
          "icon": "asldfkj;a",
          "summary": "asldkfj",
        },
        Object {
          "date": "asasdfasdfdf",
          "descrip": "asldljkahsdfljhalsdkfjhkf",
          "icon": "asldfkj;a",
          "summary": "asldkfj",
        },
      ]
    }
    name="jose"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <section
          className="top-bar"
        >
          <div
            className="logo-container"
          >
            <Link
              replace={false}
              to="/"
            >
              <ReactComponent
                className="logo"
              />
            </Link>
          </div>
          <Connect(LocationSearchInput) />
        </section>,
        <div
          className="loaded-details"
        >
          <div
            className="camp-overview"
          >
            <h1
              className="camp-name-details"
            >
              jose
            </h1>
            <div
              className="camp-break"
            />
            <div
              className="camp-info"
            >
              <p
                className="info"
              >
                Has Amps: 
                <span
                  className="hookup"
                >
                  NA
                </span>
              </p>
              <p
                className="info"
              >
                Has Hose Hookup: 
                <span
                  className="hookup"
                >
                  NA
                </span>
              </p>
              <p
                className="info"
              >
                Allows Pets: 
                <span
                  className="hookup"
                >
                  NA
                </span>
              </p>
              <p
                className="info"
              >
                Has Sewer Hookup: 
                <span
                  className="hookup"
                >
                  NA
                </span>
              </p>
              <p
                className="info"
              >
                Has Water Access: 
                <span
                  className="hookup"
                >
                  NA
                </span>
              </p>
            </div>
          </div>
          <div
            className="camp-break"
          />
          <Connect(HikesList) />
          <div
            className="camp-break"
          />
          <h1
            className="nearby-hikes"
          >
            Weather Details
          </h1>
          <div
            className="detailed-forecasts"
          >
            <div
              className="weather-day"
            >
              <p
                className="forecast-p"
              >
                djfhl
              </p>
              <div
                className="forecast-icon-container"
              >
                <img
                  alt="asldkfj"
                  className="forecast-icon"
                  src="asldfkj;a"
                />
              </div>
              <p
                className="forecast-p"
              >
                asldkf
              </p>
            </div>
            <div
              className="weather-day"
            >
              <p
                className="forecast-p"
              >
                fasdf
              </p>
              <div
                className="forecast-icon-container"
              >
                <img
                  alt="asldkfj"
                  className="forecast-icon"
                  src="asldfkj;a"
                />
              </div>
              <p
                className="forecast-p"
              >
                asldljkahsdfljhalsdkfjhkf
              </p>
            </div>
          </div>
        </div>,
      ],
      "className": "camp-details",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="logo-container"
            >
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </div>,
            <Connect(LocationSearchInput) />,
          ],
          "className": "top-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>,
              "className": "logo-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ReactComponent
                  className="logo"
                />,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "logo",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="camp-overview"
            >
              <h1
                className="camp-name-details"
              >
                jose
              </h1>
              <div
                className="camp-break"
              />
              <div
                className="camp-info"
              >
                <p
                  className="info"
                >
                  Has Amps: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Hose Hookup: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Allows Pets: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Sewer Hookup: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Water Access: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
              </div>
            </div>,
            <div
              className="camp-break"
            />,
            <Connect(HikesList) />,
            <div
              className="camp-break"
            />,
            <h1
              className="nearby-hikes"
            >
              Weather Details
            </h1>,
            <div
              className="detailed-forecasts"
            >
              <div
                className="weather-day"
              >
                <p
                  className="forecast-p"
                >
                  djfhl
                </p>
                <div
                  className="forecast-icon-container"
                >
                  <img
                    alt="asldkfj"
                    className="forecast-icon"
                    src="asldfkj;a"
                  />
                </div>
                <p
                  className="forecast-p"
                >
                  asldkf
                </p>
              </div>
              <div
                className="weather-day"
              >
                <p
                  className="forecast-p"
                >
                  fasdf
                </p>
                <div
                  className="forecast-icon-container"
                >
                  <img
                    alt="asldkfj"
                    className="forecast-icon"
                    src="asldfkj;a"
                  />
                </div>
                <p
                  className="forecast-p"
                >
                  asldljkahsdfljhalsdkfjhkf
                </p>
              </div>
            </div>,
          ],
          "className": "loaded-details",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="camp-name-details"
                >
                  jose
                </h1>,
                <div
                  className="camp-break"
                />,
                <div
                  className="camp-info"
                >
                  <p
                    className="info"
                  >
                    Has Amps: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Hose Hookup: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Allows Pets: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Sewer Hookup: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Water Access: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                </div>,
              ],
              "className": "camp-overview",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "jose",
                  "className": "camp-name-details",
                },
                "ref": null,
                "rendered": "jose",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "camp-break",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="info"
                    >
                      Has Amps: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>,
                    <p
                      className="info"
                    >
                      Has Hose Hookup: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>,
                    <p
                      className="info"
                    >
                      Allows Pets: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>,
                    <p
                      className="info"
                    >
                      Has Sewer Hookup: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>,
                    <p
                      className="info"
                    >
                      Has Water Access: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>,
                  ],
                  "className": "camp-info",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Has Amps: ",
                        <span
                          className="hookup"
                        >
                          NA
                        </span>,
                      ],
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Has Amps: ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "NA",
                          "className": "hookup",
                        },
                        "ref": null,
                        "rendered": "NA",
                        "type": "span",
                      },
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Has Hose Hookup: ",
                        <span
                          className="hookup"
                        >
                          NA
                        </span>,
                      ],
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Has Hose Hookup: ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "NA",
                          "className": "hookup",
                        },
                        "ref": null,
                        "rendered": "NA",
                        "type": "span",
                      },
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Allows Pets: ",
                        <span
                          className="hookup"
                        >
                          NA
                        </span>,
                      ],
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Allows Pets: ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "NA",
                          "className": "hookup",
                        },
                        "ref": null,
                        "rendered": "NA",
                        "type": "span",
                      },
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Has Sewer Hookup: ",
                        <span
                          className="hookup"
                        >
                          NA
                        </span>,
                      ],
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Has Sewer Hookup: ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "NA",
                          "className": "hookup",
                        },
                        "ref": null,
                        "rendered": "NA",
                        "type": "span",
                      },
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Has Water Access: ",
                        <span
                          className="hookup"
                        >
                          NA
                        </span>,
                      ],
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Has Water Access: ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "NA",
                          "className": "hookup",
                        },
                        "ref": null,
                        "rendered": "NA",
                        "type": "span",
                      },
                    ],
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "camp-break",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "lat": undefined,
              "long": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "camp-break",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Weather Details",
              "className": "nearby-hikes",
            },
            "ref": null,
            "rendered": "Weather Details",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="weather-day"
                >
                  <p
                    className="forecast-p"
                  >
                    djfhl
                  </p>
                  <div
                    className="forecast-icon-container"
                  >
                    <img
                      alt="asldkfj"
                      className="forecast-icon"
                      src="asldfkj;a"
                    />
                  </div>
                  <p
                    className="forecast-p"
                  >
                    asldkf
                  </p>
                </div>,
                <div
                  className="weather-day"
                >
                  <p
                    className="forecast-p"
                  >
                    fasdf
                  </p>
                  <div
                    className="forecast-icon-container"
                  >
                    <img
                      alt="asldkfj"
                      className="forecast-icon"
                      src="asldfkj;a"
                    />
                  </div>
                  <p
                    className="forecast-p"
                  >
                    asldljkahsdfljhalsdkfjhkf
                  </p>
                </div>,
              ],
              "className": "detailed-forecasts",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "asaskdjfhlakjhdflkdf",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="forecast-p"
                    >
                      djfhl
                    </p>,
                    <div
                      className="forecast-icon-container"
                    >
                      <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />
                    </div>,
                    <p
                      className="forecast-p"
                    >
                      asldkf
                    </p>,
                  ],
                  "className": "weather-day",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "djfhl",
                      "className": "forecast-p",
                    },
                    "ref": null,
                    "rendered": "djfhl",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />,
                      "className": "forecast-icon-container",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "asldkfj",
                        "className": "forecast-icon",
                        "src": "asldfkj;a",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "asldkf",
                      "className": "forecast-p",
                    },
                    "ref": null,
                    "rendered": "asldkf",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "asasdfasdfdf",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="forecast-p"
                    >
                      fasdf
                    </p>,
                    <div
                      className="forecast-icon-container"
                    >
                      <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />
                    </div>,
                    <p
                      className="forecast-p"
                    >
                      asldljkahsdfljhalsdkfjhkf
                    </p>,
                  ],
                  "className": "weather-day",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "fasdf",
                      "className": "forecast-p",
                    },
                    "ref": null,
                    "rendered": "fasdf",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />,
                      "className": "forecast-icon-container",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "asldkfj",
                        "className": "forecast-icon",
                        "src": "asldfkj;a",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "asldljkahsdfljhalsdkfjhkf",
                      "className": "forecast-p",
                    },
                    "ref": null,
                    "rendered": "asldljkahsdfljhalsdkfjhkf",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <section
            className="top-bar"
          >
            <div
              className="logo-container"
            >
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </div>
            <Connect(LocationSearchInput) />
          </section>,
          <div
            className="loaded-details"
          >
            <div
              className="camp-overview"
            >
              <h1
                className="camp-name-details"
              >
                jose
              </h1>
              <div
                className="camp-break"
              />
              <div
                className="camp-info"
              >
                <p
                  className="info"
                >
                  Has Amps: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Hose Hookup: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Allows Pets: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Sewer Hookup: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
                <p
                  className="info"
                >
                  Has Water Access: 
                  <span
                    className="hookup"
                  >
                    NA
                  </span>
                </p>
              </div>
            </div>
            <div
              className="camp-break"
            />
            <Connect(HikesList) />
            <div
              className="camp-break"
            />
            <h1
              className="nearby-hikes"
            >
              Weather Details
            </h1>
            <div
              className="detailed-forecasts"
            >
              <div
                className="weather-day"
              >
                <p
                  className="forecast-p"
                >
                  djfhl
                </p>
                <div
                  className="forecast-icon-container"
                >
                  <img
                    alt="asldkfj"
                    className="forecast-icon"
                    src="asldfkj;a"
                  />
                </div>
                <p
                  className="forecast-p"
                >
                  asldkf
                </p>
              </div>
              <div
                className="weather-day"
              >
                <p
                  className="forecast-p"
                >
                  fasdf
                </p>
                <div
                  className="forecast-icon-container"
                >
                  <img
                    alt="asldkfj"
                    className="forecast-icon"
                    src="asldfkj;a"
                  />
                </div>
                <p
                  className="forecast-p"
                >
                  asldljkahsdfljhalsdkfjhkf
                </p>
              </div>
            </div>
          </div>,
        ],
        "className": "camp-details",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="logo-container"
              >
                <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>
              </div>,
              <Connect(LocationSearchInput) />,
            ],
            "className": "top-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>,
                "className": "logo-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <ReactComponent
                    className="logo"
                  />,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "logo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="camp-overview"
              >
                <h1
                  className="camp-name-details"
                >
                  jose
                </h1>
                <div
                  className="camp-break"
                />
                <div
                  className="camp-info"
                >
                  <p
                    className="info"
                  >
                    Has Amps: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Hose Hookup: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Allows Pets: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Sewer Hookup: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                  <p
                    className="info"
                  >
                    Has Water Access: 
                    <span
                      className="hookup"
                    >
                      NA
                    </span>
                  </p>
                </div>
              </div>,
              <div
                className="camp-break"
              />,
              <Connect(HikesList) />,
              <div
                className="camp-break"
              />,
              <h1
                className="nearby-hikes"
              >
                Weather Details
              </h1>,
              <div
                className="detailed-forecasts"
              >
                <div
                  className="weather-day"
                >
                  <p
                    className="forecast-p"
                  >
                    djfhl
                  </p>
                  <div
                    className="forecast-icon-container"
                  >
                    <img
                      alt="asldkfj"
                      className="forecast-icon"
                      src="asldfkj;a"
                    />
                  </div>
                  <p
                    className="forecast-p"
                  >
                    asldkf
                  </p>
                </div>
                <div
                  className="weather-day"
                >
                  <p
                    className="forecast-p"
                  >
                    fasdf
                  </p>
                  <div
                    className="forecast-icon-container"
                  >
                    <img
                      alt="asldkfj"
                      className="forecast-icon"
                      src="asldfkj;a"
                    />
                  </div>
                  <p
                    className="forecast-p"
                  >
                    asldljkahsdfljhalsdkfjhkf
                  </p>
                </div>
              </div>,
            ],
            "className": "loaded-details",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="camp-name-details"
                  >
                    jose
                  </h1>,
                  <div
                    className="camp-break"
                  />,
                  <div
                    className="camp-info"
                  >
                    <p
                      className="info"
                    >
                      Has Amps: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>
                    <p
                      className="info"
                    >
                      Has Hose Hookup: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>
                    <p
                      className="info"
                    >
                      Allows Pets: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>
                    <p
                      className="info"
                    >
                      Has Sewer Hookup: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>
                    <p
                      className="info"
                    >
                      Has Water Access: 
                      <span
                        className="hookup"
                      >
                        NA
                      </span>
                    </p>
                  </div>,
                ],
                "className": "camp-overview",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "jose",
                    "className": "camp-name-details",
                  },
                  "ref": null,
                  "rendered": "jose",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "camp-break",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="info"
                      >
                        Has Amps: 
                        <span
                          className="hookup"
                        >
                          NA
                        </span>
                      </p>,
                      <p
                        className="info"
                      >
                        Has Hose Hookup: 
                        <span
                          className="hookup"
                        >
                          NA
                        </span>
                      </p>,
                      <p
                        className="info"
                      >
                        Allows Pets: 
                        <span
                          className="hookup"
                        >
                          NA
                        </span>
                      </p>,
                      <p
                        className="info"
                      >
                        Has Sewer Hookup: 
                        <span
                          className="hookup"
                        >
                          NA
                        </span>
                      </p>,
                      <p
                        className="info"
                      >
                        Has Water Access: 
                        <span
                          className="hookup"
                        >
                          NA
                        </span>
                      </p>,
                    ],
                    "className": "camp-info",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Has Amps: ",
                          <span
                            className="hookup"
                          >
                            NA
                          </span>,
                        ],
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Has Amps: ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "NA",
                            "className": "hookup",
                          },
                          "ref": null,
                          "rendered": "NA",
                          "type": "span",
                        },
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Has Hose Hookup: ",
                          <span
                            className="hookup"
                          >
                            NA
                          </span>,
                        ],
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Has Hose Hookup: ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "NA",
                            "className": "hookup",
                          },
                          "ref": null,
                          "rendered": "NA",
                          "type": "span",
                        },
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Allows Pets: ",
                          <span
                            className="hookup"
                          >
                            NA
                          </span>,
                        ],
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Allows Pets: ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "NA",
                            "className": "hookup",
                          },
                          "ref": null,
                          "rendered": "NA",
                          "type": "span",
                        },
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Has Sewer Hookup: ",
                          <span
                            className="hookup"
                          >
                            NA
                          </span>,
                        ],
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Has Sewer Hookup: ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "NA",
                            "className": "hookup",
                          },
                          "ref": null,
                          "rendered": "NA",
                          "type": "span",
                        },
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Has Water Access: ",
                          <span
                            className="hookup"
                          >
                            NA
                          </span>,
                        ],
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Has Water Access: ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "NA",
                            "className": "hookup",
                          },
                          "ref": null,
                          "rendered": "NA",
                          "type": "span",
                        },
                      ],
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "camp-break",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "lat": undefined,
                "long": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "camp-break",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Weather Details",
                "className": "nearby-hikes",
              },
              "ref": null,
              "rendered": "Weather Details",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="weather-day"
                  >
                    <p
                      className="forecast-p"
                    >
                      djfhl
                    </p>
                    <div
                      className="forecast-icon-container"
                    >
                      <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />
                    </div>
                    <p
                      className="forecast-p"
                    >
                      asldkf
                    </p>
                  </div>,
                  <div
                    className="weather-day"
                  >
                    <p
                      className="forecast-p"
                    >
                      fasdf
                    </p>
                    <div
                      className="forecast-icon-container"
                    >
                      <img
                        alt="asldkfj"
                        className="forecast-icon"
                        src="asldfkj;a"
                      />
                    </div>
                    <p
                      className="forecast-p"
                    >
                      asldljkahsdfljhalsdkfjhkf
                    </p>
                  </div>,
                ],
                "className": "detailed-forecasts",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "asaskdjfhlakjhdflkdf",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="forecast-p"
                      >
                        djfhl
                      </p>,
                      <div
                        className="forecast-icon-container"
                      >
                        <img
                          alt="asldkfj"
                          className="forecast-icon"
                          src="asldfkj;a"
                        />
                      </div>,
                      <p
                        className="forecast-p"
                      >
                        asldkf
                      </p>,
                    ],
                    "className": "weather-day",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "djfhl",
                        "className": "forecast-p",
                      },
                      "ref": null,
                      "rendered": "djfhl",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt="asldkfj"
                          className="forecast-icon"
                          src="asldfkj;a"
                        />,
                        "className": "forecast-icon-container",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "asldkfj",
                          "className": "forecast-icon",
                          "src": "asldfkj;a",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "asldkf",
                        "className": "forecast-p",
                      },
                      "ref": null,
                      "rendered": "asldkf",
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "asasdfasdfdf",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="forecast-p"
                      >
                        fasdf
                      </p>,
                      <div
                        className="forecast-icon-container"
                      >
                        <img
                          alt="asldkfj"
                          className="forecast-icon"
                          src="asldfkj;a"
                        />
                      </div>,
                      <p
                        className="forecast-p"
                      >
                        asldljkahsdfljhalsdkfjhkf
                      </p>,
                    ],
                    "className": "weather-day",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "fasdf",
                        "className": "forecast-p",
                      },
                      "ref": null,
                      "rendered": "fasdf",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt="asldkfj"
                          className="forecast-icon"
                          src="asldfkj;a"
                        />,
                        "className": "forecast-icon-container",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "asldkfj",
                          "className": "forecast-icon",
                          "src": "asldfkj;a",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "asldljkahsdfljhalsdkfjhkf",
                        "className": "forecast-p",
                      },
                      "ref": null,
                      "rendered": "asldljkahsdfljhalsdkfjhkf",
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
